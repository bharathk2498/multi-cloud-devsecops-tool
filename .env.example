# Multi-Cloud DevSecOps Tool - Environment Configuration
# Copy this file to .env and customize for your environment

# Application Settings
FLASK_ENV=development
SESSION_SECRET=change-this-in-production-to-a-secure-random-string
PORT=5000

# Database Configuration
# SQLite (default - for development)
DATABASE_URL=sqlite:///devsecops.db

# PostgreSQL (recommended for production)
# DATABASE_URL=postgresql://username:password@localhost:5432/devsecops_db

# MySQL (alternative option)
# DATABASE_URL=mysql://username:password@localhost:3306/devsecops_db

# Redis Configuration (optional - for session storage and caching)
REDIS_URL=redis://localhost:6379/0

# Security Settings
# Generate secure session secret: python -c "import secrets; print(secrets.token_hex(32))"
# SESSION_SECRET=your-32-character-hex-string-here

# Cloud Provider API Keys (optional - for future integrations)
# AWS_ACCESS_KEY_ID=your-aws-access-key
# AWS_SECRET_ACCESS_KEY=your-aws-secret-key
# AWS_DEFAULT_REGION=us-east-1

# AZURE_CLIENT_ID=your-azure-client-id
# AZURE_CLIENT_SECRET=your-azure-client-secret
# AZURE_TENANT_ID=your-azure-tenant-id

# GOOGLE_APPLICATION_CREDENTIALS=/path/to/service-account.json
# GOOGLE_PROJECT_ID=your-gcp-project-id

# Logging Configuration
LOG_LEVEL=INFO
LOG_FILE=logs/devsecops.log

# Performance Settings
WORKERS=4
TIMEOUT=120
MAX_CONNECTIONS=1000

# Security Headers
ENABLE_CORS=false
ALLOWED_ORIGINS=http://localhost:3000,http://localhost:8080

# Feature Flags
ENABLE_API_DOCS=true
ENABLE_METRICS=true
ENABLE_HEALTH_CHECK=true

# Monitoring and Alerting (optional)
# SENTRY_DSN=your-sentry-dsn-here
# DATADOG_API_KEY=your-datadog-api-key
# NEW_RELIC_LICENSE_KEY=your-newrelic-license-key

# Email Configuration (for notifications)
# SMTP_SERVER=smtp.gmail.com
# SMTP_PORT=587
# SMTP_USERNAME=your-email@gmail.com
# SMTP_PASSWORD=your-app-password
# FROM_EMAIL=noreply@yourdomain.com

# Backup Configuration
# BACKUP_ENABLED=true
# BACKUP_INTERVAL=24
# BACKUP_RETENTION_DAYS=30
# BACKUP_STORAGE_PATH=/var/backups/devsecops

# Rate Limiting
RATE_LIMIT_ENABLED=true
RATE_LIMIT_PER_MINUTE=60
RATE_LIMIT_PER_HOUR=1000

# Authentication (if implementing user auth)
# JWT_SECRET_KEY=your-jwt-secret-key
# JWT_EXPIRATION_HOURS=24
# ENABLE_REGISTRATION=false
# REQUIRE_EMAIL_VERIFICATION=true

# Development Settings
DEBUG_MODE=false
RELOAD_ON_CHANGE=false
PROFILING_ENABLED=false

# Maintenance Mode
MAINTENANCE_MODE=false
MAINTENANCE_MESSAGE="System maintenance in progress. Please try again later."
